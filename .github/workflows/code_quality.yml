name: Code Quality Linter

# Trigger the workflow on push and pull request events
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # C++ Linter job using cppcheck and clang-format
  lint_cpp:
    name: Lint C++ Code
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Install required tools
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cppcheck clang-format

      # Run cppcheck on the C++ source directory
      - name: Run cppcheck
        run: |
          cppcheck --enable=all --inconclusive --error-exitcode=1 \
                    --suppress=missingInclude --suppress=noExplicitConstructor \
                    src/robot_control/src

      # Automatically apply formatting changes to C++ files
      - name: Run clang-format
        run: |
          find src/robot_control/src -name "*.cpp" -o -name "*.h" | xargs clang-format -i

  # Python Linter job using flake8
  lint_python:
    name: Format and Lint Python Code
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python (with the desired version if needed)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Install black and flake8
      - name: Install black and flake8
        run: |
          python -m pip install black flake8

      # Run black formatter before linting
      - name: Run black formatter
        run: |
          black src/robot_description/launch
          black src/robot_moveit_config/launch

      # Run flake8 on the Python source directories
      - name: Run flake8
        run: |
          flake8 src/robot_description/launch
          flake8 src/robot_moveit_config/launch
